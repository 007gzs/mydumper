---
version: 2.1

executors:
  ubuntu2004:
    docker:
    - image: cimg/base:stable-20.04
      environment:
        MYSQL_HOST: 127.0.0.1
        MYSQL_DB: mate
        MYSQL_USER: root
        MYSQL_ALLOW_EMPTY_PASSWORD: true
        MYSQL_PASSWORD:
    - image: percona:8
      command: mysqld
      environment:
        MYSQL_USER: root
        MYSQL_ALLOW_EMPTY_PASSWORD: true
    working_directory: /tmp/work/mydumper
  el8:
    docker:
    - image: almalinux:8
      environment:
        MYSQL_HOST: 127.0.0.1
        MYSQL_DB: mate
        MYSQL_USER: root
        MYSQL_ALLOW_EMPTY_PASSWORD: true
        MYSQL_PASSWORD:
    - image: percona:8
      command: mysqld
      environment:
        MYSQL_USER: root
        MYSQL_ALLOW_EMPTY_PASSWORD: true
    working_directory: /tmp/work/mydumper

commands:
  prepare_ubuntu:
    steps:
    - run: sudo apt-get update
    - run: sudo apt-get install -y cmake g++ git make libglib2.0-dev zlib1g-dev libpcre3-dev libssl-dev libzstd-dev

  prepare_el:
    steps:
    - run: yum -y install cmake gcc-c++ git make glib2-devel zlib-devel pcre-devel openssl-devel libzstd-devel
    - run: yum -y install wget 



  prepare_ubuntu_percona80:
    steps:
    - run: wget https://repo.percona.com/apt/percona-release_latest.focal_all.deb
    - run: sudo dpkg -i percona-release_latest.focal_all.deb
    - run: sudo percona-release setup -y ps80
    - run: sudo apt-get install -y libperconaserverclient21 libperconaserverclient21-dev percona-server-client

  prepare_el_percona57:
    steps:
    - run: yum -y install  https://repo.percona.com/yum/percona-release-latest.noarch.rpm
    - run: percona-release setup -y ps57
    - run: dnf -y module disable mysql
    - run: yum -y install Percona-Server-devel-57 Percona-Server-client-57

  prepare_el_percona80:
    steps:
    - run: yum -y install  https://repo.percona.com/yum/percona-release-latest.noarch.rpm
    - run: percona-release setup -y ps80
    - run: yum -y install percona-server-devel percona-server-client
    # percona-server-server

  compile:
    parameters:
      CMAKED:
        default: ""
        type: string
    steps:
    - run: cmake . <<parameters.CMAKED>>
    - run: make
    - run: ./mydumper --version

  compile_zstd:
    parameters:
      CMAKED:
        default: ""
        type: string
    steps:
    - compile:
        CMAKED: "-DWITH_ZSTD=ON <<parameters.CMAKED>>"

  compile_and_test_mydumper:
    steps:
    - compile
    - run: bash ./test_mydumper.sh SSL GZIP
    - compile_zstd
    - run: bash ./test_mydumper.sh SSL ZSTD

jobs:
  compile_and_test_mydumper_in_ubuntu_2004:
    executor: ubuntu2004
    steps:
    - checkout
    - prepare_ubuntu
    - prepare_ubuntu_percona80
#    - compile_and_test_mydumper
    - persist_to_workspace:
         root: /tmp/work/mydumper
         paths:
           - .
  compile_and_test_mydumper_in_el_8:
    executor: el8
    steps:
    - checkout
    - prepare_el
    - prepare_el_percona80
    - compile_and_test_mydumper
    - persist_to_workspace:
         root: /tmp/work/mydumper
         paths:
           - .

  build_el_8:
    executor: el8
    steps:
    - checkout
    - prepare_el
    - prepare_el_percona57
    - compile:
        CMAKED: "-DMYSQL_LIBRARIES_mysqlclient:FILEPATH=/usr/lib64/mysql/libmysqlclient.a"
    - run: mkdir -p /tmp/src/mydumper/el8_percona_57_gzip 
    - run: cp mydumper myloader /tmp/src/mydumper/el8_percona_57_gzip/
    - compile_zstd:
        CMAKED: "-DMYSQL_LIBRARIES_mysqlclient:FILEPATH=/usr/lib64/mysql/libmysqlclient.a"
    - run: mkdir -p /tmp/src/mydumper/el8_percona_57_zstd
    - run: cp mydumper myloader /tmp/src/mydumper/el8_percona_57_zstd/
    - persist_to_workspace:
         root: /tmp/src/mydumper
         paths:
           - el8_percona_57_gzip 
           - el8_percona_57_zstd

  publish-github-release:
    docker:
      - image: cibuilds/github:0.10
    environment:
      MYDUMPER_VERSION: 0.13.2
      MYDUMPER_REVISION: 1
    steps:
    - attach_workspace:
        at: /tmp/src/mydumper      
    - checkout
    - run: mkdir -p /tmp/package
#    - run: yum -y install rpmdevtools
    - run: ./package/build.sh ${MYDUMPER_VERSION} ${MYDUMPER_REVISION}
    - run: ghr -t ${GITHUB_TOKEN} -u ${CIRCLE_PROJECT_USERNAME} -r ${CIRCLE_PROJECT_REPONAME} -c ${CIRCLE_SHA1} -prerelease -draft -delete TEST /tmp/package

workflows:
  version: 2
  mydumper:
    jobs:
    
    - compile_and_test_mydumper_in_ubuntu_2004:
        filters:
          branches:
            ignore: /.*/
          tags:
#            only: /.*/
            only: /^\d+\.\d+\.\d+$/
    - build_el_8:
        filters:
#          branches:
#            ignore: /.*/
          tags:
            only: /.*/
#            only: /^\d+\.\d+\.\d+$/

    - publish-github-release:
        requires:
#          - compile_and_test_mydumper_in_ubuntu_2004
          - build_el_8
        filters:
#          branches:
#            ignore: /.*/
          tags:
#            only: /.*/
            only: /^\d+\.\d+\.\d+$/

